{"version":3,"file":"static/js/499.41d12a7f.chunk.js","mappings":"8SAIMA,EAAU,CACdC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OALD,yNAUHC,EAAa,mCAAG,6GAEFC,EAAAA,EAAAA,IACrB,+DACAJ,GAJuB,cAEnBK,EAFmB,yBAOjBA,EAASC,MAPQ,gCASzBC,QAAQC,MAAR,MATyB,yDAAH,qDAcbC,EAAY,mCAAG,WAAOC,GAAP,yFAElBC,EAAiBC,mBAAmBF,GAFlB,SAGDN,EAAAA,EAAAA,IAAA,0DAC8BO,EAD9B,8CAErBX,GALsB,cAGlBK,EAHkB,yBAQjBA,EAASC,MARQ,gCAUxBC,QAAQC,MAAR,MAVwB,yDAAH,sDAeZK,EAAiB,mCAAG,WAAOC,GAAP,gGAENV,EAAAA,EAAAA,IAAA,6CACiBU,EADjB,mBAErBd,GAJ2B,cAEvBK,EAFuB,OAM7BE,QAAQQ,IAAIV,EAASC,MANQ,kBAOrBD,EAASC,MAPY,gCAS7BC,QAAQC,MAAR,MAT6B,yDAAH,sDAcjBQ,EAAiB,mCAAG,WAAOF,GAAP,gGAENV,EAAAA,EAAAA,IAAA,6CACiBU,EADjB,2BAErBd,GAJ2B,cAEvBK,EAFuB,yBAOrBA,EAASC,MAPY,gCAS7BC,QAAQC,MAAR,MAT6B,yDAAH,sDAcjBS,EAAiB,mCAAG,WAAOH,GAAP,gGAENV,EAAAA,EAAAA,IAAA,6CACiBU,EADjB,kCAErBd,GAJ2B,cAEvBK,EAFuB,yBAOrBA,EAASC,MAPY,gCAS7BC,QAAQC,MAAR,MAT6B,yDAAH,qD,gHCnB9B,UA9Cc,WAAO,IAAD,IAChB,GAA0BU,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQN,GAAYO,EAAAA,EAAAA,MAAZP,QACFQ,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAepD,OAXAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAe,mCAAG,8GAEOhB,EAAAA,EAAAA,IAAkBC,GAFzB,OAEdgB,EAFc,OAGpBV,EAASU,GAHW,gDAKpBvB,QAAQC,MAAR,MALoB,yDAAH,qDAOrBqB,GACH,GAAE,CAACf,IAECK,GAKD,4BACI,6BACI,SAAC,KAAD,CAAMY,GAAIP,EAAaQ,QAAvB,qBAEJ,gBAAKC,IAAG,UAvBA,6BAuBA,YAtBG,QAsBH,OACsBd,EAAMe,aAClCC,IAAI,MACN,wBAAKhB,EAAMiB,SACX,uBAAIjB,EAAMkB,YACV,2BACI,yBACI,SAAC,KAAD,CAAMN,GAAI,OAAV,4LAEJ,yBACI,SAAC,KAAD,CAAMA,GAAI,UAAV,wIAGR,SAAC,KAAD,QArBG,uCAwBd,C","sources":["API/getSearchMovies.js","pages/Movie.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjODBjYWExOTNmYThjNjdkM2IzNjAxNTU5ZjI3ZjVjOCIsInN1YiI6IjY0MzZmYjNkOTQ2MzE4MDA5YTJlNWJlMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.kPu6W8tbG8flf6ruZ_S92c8XdiohS5SHkBe3jEgG81I';\n\nconst options = {\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${API_KEY}`,\n  },\n};\n\n// Запит на отримання загальних трендів\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n      options\n    );\n    // console.log(response.data) // в консоль результат\n    return (response.data);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Запит на пошук фільмів за запитом\nexport const searchMovies = async (query) => {\n  try {\n    const formattedQuery = encodeURIComponent(query);\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${formattedQuery}&include_adult=false&language=en-US&page=1`,\n      options\n    );\n    // console.log(response.data); // в консоль результат\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Запит на отримання деталей конкретного фільму\nexport const fetchMovieDetails = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n      options\n    );\n    console.log(response.data) // в консоль результат\n    return (response.data);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Запит на отримання акторського складу фільму\nexport const fetchMovieCredits = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n      options\n    );\n    // console.log(response.data.cast) // в консоль результат\n    return (response.data);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Запит на отримання відгуків про фільм\nexport const fetchMovieReviews = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n      options\n    );\n    // console.log(response.data.results) // в консоль результат\n    return (response.data);\n  } catch (error) {\n    console.error(error);\n  }\n};","import { fetchMovieDetails } from \"API/getSearchMovies\";\nimport { useLocation, Link, Outlet , useParams } from \"react-router-dom\";\nimport React, { useEffect, useState, useRef } from 'react';\n\nconst Movie = () => {\n    const [movie, setMovie] = useState(null);\n    const { movieId } = useParams()\n    const location = useLocation()\n    const backLinkHref = useRef(location.state?.from ?? \"/movies\");\n    const baseUrl = \"https://image.tmdb.org/t/p\"\n    const posterSize = \"w300\"\n\n    useEffect(() => {\n        const getMovieDetails = async () => {\n        try {\n            const movieDetails = await fetchMovieDetails(movieId);\n            setMovie(movieDetails);\n        } catch (error) {\n            console.error(error);\n        }};\n        getMovieDetails();\n    }, [movieId]);\n\n    if (!movie) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div>\n            <button>\n                <Link to={backLinkHref.current}>Back</Link>\n            </button>\n            <img src=\n              {`${baseUrl}/${posterSize}${movie.poster_path}`}\n              alt=\"\" />\n            <h2>{movie.title}</h2>\n            <p>{movie.overview}</p>\n            <ul>\n                <li>\n                    <Link to={'cast'}>інформація про акторський склад</Link>\n                </li>\n                <li>\n                    <Link to={'reviews'}>інформація про огляди</Link>\n                </li>\n            </ul>\n            <Outlet />\n        </div>\n    );\n};\n\nexport default Movie"],"names":["options","headers","Authorization","fetchTrending","axios","response","data","console","error","searchMovies","query","formattedQuery","encodeURIComponent","fetchMovieDetails","movieId","log","fetchMovieCredits","fetchMovieReviews","useState","movie","setMovie","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","getMovieDetails","movieDetails","to","current","src","poster_path","alt","title","overview"],"sourceRoot":""}